# Generated by Django 3.0.8 on 2020-11-01 12:19

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllDocumentCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Document_count', max_length=10)),
                ('count', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docfile', models.FileField(upload_to='documents/')),
                ('status', models.SmallIntegerField(choices=[(0, 'In Queue'), (1, 'Processing'), (2, 'Complete'), (-1, 'Error')], default=0)),
                ('title', models.CharField(default='', max_length=64)),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('unique_id', models.CharField(default='', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_id', models.UUIDField()),
                ('error', models.TextField()),
                ('source_text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Pdf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', help_text='The title of the book', max_length=64, verbose_name='book title')),
                ('category', models.CharField(choices=[('art', 'Art'), ('arc', 'Architecture'), ('aut', 'Autobiography'), ('bus', 'Business/economics'), ('chi', "Children's"), ('fic', 'Fiction'), ('hea', 'Health/fitness'), ('his', 'History'), ('nov', 'Novel'), ('jou', 'Journal'), ('poe', 'Poetry'), ('rel', 'Religion/spirituality'), ('sci', 'Science'), ('spo', 'Sports_and_leisure'), ('tex', 'Textbook'), ('tra', 'Travel')], max_length=3)),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('modified_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=256)),
                ('answer', models.CharField(max_length=100)),
                ('question_type', models.CharField(choices=[('TF', 'True or False'), ('MCQ', 'Multiple choice')], max_length=3)),
                ('option1', models.CharField(default='', max_length=64)),
                ('option2', models.CharField(default='', max_length=64)),
                ('option3', models.CharField(default='', max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='QuizzerRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('total', models.PositiveIntegerField(default=0)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crackerbox_.Document')),
            ],
        ),
    ]
